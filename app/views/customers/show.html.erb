<% provide(:title, "contacts") %>

<div name="header" class="login_title">  
      Customer list
</div>

<div class="d-flex flex-row align-items-center customer-filter-ctn"> 
  <input id="customer_filter" type="text" placeholder="filter.." class="form-control" > 
</div>

<div id="customer_grid" class="ag-theme-alpine" style="width:auto;border:none"></div>



<script type="text/javascript"> 
  
 

  ControlsCellRenderer = function(params){
    let wrap = document.createElement("div");
    let deleteButton = document.createElement("button");
    let editButton = document.createElement("button");
    
    //styling
    wrap.className = "d-flex flex-row align-items-center justify-content-center";
    wrap.style.width = "100%";
    wrap.style.height = "100%";
    wrap.style.padding = "5px";

    deleteButton.className = "btn btn-sm btn-dark"
    editButton.className = "btn btn-sm btn-dark"

    editButton.style.margin = "3px";
    deleteButton.style.margin = "3px";
    
    deleteButton.textContent = "delete"
    editButton.textContent = "edit"

    //events
    deleteButton.addEventListener("click",async (e)=>{
      let result = await yesNoDialog();
      if(result === "yes"){
        //delete item                
        let response = await deleteCustomer(params.data.id,"<%= customers_delete_url %>",'<%= root_url%>')
        if(response.operation_status === "success"){
          
          location.reload()
        }else{
          showSnackBar(response.operation_status + ": "+response.error_message)
        }
      }      
    });
    editButton.addEventListener("click",(e)=>{

    });


    //append
    wrap.appendChild(deleteButton)
    wrap.appendChild(editButton)
    
    return wrap;
  }


  function dateFormatter(params){
    let dateAsString = params.data.relationshipstart
    let dateAsObject = new Date(dateAsString);
    return dateAsObject.getDate() + "/" + dateAsObject.getMonth() + "/" + dateAsObject.getFullYear();
  }


  let defaultColDef = {
    cellStyle: {"line-height":"60px","font-size":"16px"},
    filter: true,
    sortable:true ,
    resizable : true
  }

  function dateComparator(date1, date2) {
    let dateObject1 = new Date(date1);
    let dateObject2 = new Date(date2);   

    return dateObject1.getTime() - dateObject2.getTime();
  }

  let columnDefs = [
    {headerName : "Name", field : "name"   },
    {headerName : "Start Date", field : "relationshipstart", valueFormatter:dateFormatter,comparator:dateComparator},
    {headerName : "Activity Type", field : "activitytype"},
    {headerName : "Email Info", field : "infoemail"},
    {headerName:"", width:120, cellRenderer:"ControlsCellRenderer", pinned: "left",resizable:false,filter:false,sortable:false,flex:2}]


  let gridOptions = {
    defaultColDef:defaultColDef,
    columnDefs: columnDefs,
    rowData: JSON.parse('<%= raw(@customer_data) %>'),
    domLayout:"autoHeight",
    components:{
      ControlsCellRenderer:ControlsCellRenderer
    },
    onGridReady:function(event){
      let ids = columnDefs.map((col)=>col.field)
      event.columnApi.autoSizeColumns(ids);
    },
    suppressCellSelection: true,
    rowHeight : 60
  };


  document.addEventListener('DOMContentLoaded', function(){
    let gridDiv = document.querySelector('#customer_grid');
    let table = new agGrid.Grid(gridDiv, gridOptions);


    $("#customer_filter").on("input",(e)=>{
      table.gridOptions.api.setQuickFilter(e.target.value)
    })


  });





</script>