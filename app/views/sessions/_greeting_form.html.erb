<div class="overlay">
  <div class="row no-gutters login_row">
    <div class="col-sm-12 col-md-6 offset-md-3 login_row_col">
      <div class="d-flex flex-column align-items-center justify-content-center login_flexwrap">
        <div id="popupMenuContainer" class="d-flex flex-column align-items-start popupMenuContainer">
        
          <% flash.each do |message_type, message| %>
          <%= content_tag(:div, message, class: "login_alert") %>
          <% end %>


          <div id="signupcontainer" class="greeting-container">
            <%= render 'sessions/signup_form' %>  
          </div>

          <div id="logincontainer" class="greeting-container">
            <%= render 'sessions/login_form' %>
          </div>  

          <div id="recoveryContainer" class="greeting-container">
            <%= render 'sessions/recovery_form' %>
          </div>   

          <div id="recovery_confirmationContainer" class="greeting-container">
            <%= render 'sessions/recovery_confirmation' %>
          </div> 

           <div id="recovery_new_password_container" class="greeting-container">
            <%= render 'sessions/recovery_new_password' %>
          </div> 

        </div> 
      </div>
    </div>
  </div>  
</div>

<script type="text/javascript"> 

//must create a private context to avoid collisions
(()=>{
  $(".overlay").fadeIn();
  //the server can return with a reset flag and a value for the panel
  //when reset=1, the greeting screens becomes the login screen
  //when reset=0 and panel is defined, the greeting screen is set to the given panel
  //this is to ensure that redirects from errors refreshes the page to the panel associated with the errors
  // ***this implementation should be redesigned***.

  let reset = <%= @reset%>
  let panel = "<%= @panel%>"


  console.log(reset)
  let panelId = "";

  //allows the user to refresh the page and land on the same panel as before the refresh
  if(sessionStorage) panelId = sessionStorage.getItem("greetingStatus");
 
  const setPanelState = (panelId, duration = "1s", clearAlerts = false)=>{
    $(".greeting-container").hide();

    let container = document.getElementById("popupMenuContainer")
    container.style.transitionDuration = duration;

    let panel = document.getElementById(panelId)

    if(panel instanceof HTMLElement){
      $(panel).fadeIn();
      container.style.height = parseInt(window.getComputedStyle(panel).height ) + 80 + "px"
    } else $("#logincontainer").fadeIn();       

    if(sessionStorage) sessionStorage.setItem("greetingStatus",panelId)

    if(clearAlerts) $(".login_alert").remove()   

    var queryParams = new URLSearchParams(window.location.search);
    queryParams.set("panel",panelId);
    history.replaceState(null, null, "?"+queryParams.toString());
  } 

  //links allowing to user to navigate accross panels
  $(".signup-link").on("click",(e)=> setPanelState("signupcontainer","1s",true))
  $(".login-link").on("click",(e)=>setPanelState("logincontainer","1s",true))
  $(".recovery-link").on("click",(e)=>setPanelState("recoveryContainer","1s",true)) 



  //init first panel according to server values. if no server values, go with sessionStorage values.
  //if no sessionStorage values, setPanelState will default to the login page 
  if(reset === 1){
    setPanelState("logincontainer","0s")
  }else{
    if(panel !== ""){
      if(panel === "password_reset"){
        setPanelState("recovery_confirmationContainer","0s") 
      }else if(panel === "password_edit"){
        setPanelState("recovery_new_password_container","0s") 
      }else{
        setPanelState(panel,"0s") 
      }
    }else{
       setPanelState(panelId,"0s")
    }
  }
  
 })()

</script>